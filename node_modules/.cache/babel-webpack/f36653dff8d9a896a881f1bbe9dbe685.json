{"ast":null,"code":"/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport StringBuilder from '../../util/StringBuilder';\n/**\n * @author satorux@google.com (Satoru Takabayashi) - creator\n * @author dswitkin@google.com (Daniel Switkin) - ported from C++\n */\n\nvar QRCode = function () {\n  function QRCode() {\n    this.maskPattern = -1;\n  }\n\n  QRCode.prototype.getMode = function () {\n    return this.mode;\n  };\n\n  QRCode.prototype.getECLevel = function () {\n    return this.ecLevel;\n  };\n\n  QRCode.prototype.getVersion = function () {\n    return this.version;\n  };\n\n  QRCode.prototype.getMaskPattern = function () {\n    return this.maskPattern;\n  };\n\n  QRCode.prototype.getMatrix = function () {\n    return this.matrix;\n  };\n  /*@Override*/\n\n\n  QRCode.prototype.toString = function () {\n    var result = new StringBuilder(); // (200)\n\n    result.append('<<\\n');\n    result.append(' mode: ');\n    result.append(this.mode ? this.mode.toString() : 'null');\n    result.append('\\n ecLevel: ');\n    result.append(this.ecLevel ? this.ecLevel.toString() : 'null');\n    result.append('\\n version: ');\n    result.append(this.version ? this.version.toString() : 'null');\n    result.append('\\n maskPattern: ');\n    result.append(this.maskPattern.toString());\n\n    if (this.matrix) {\n      result.append('\\n matrix:\\n');\n      result.append(this.matrix.toString());\n    } else {\n      result.append('\\n matrix: null\\n');\n    }\n\n    result.append('>>\\n');\n    return result.toString();\n  };\n\n  QRCode.prototype.setMode = function (value) {\n    this.mode = value;\n  };\n\n  QRCode.prototype.setECLevel = function (value) {\n    this.ecLevel = value;\n  };\n\n  QRCode.prototype.setVersion = function (version) {\n    this.version = version;\n  };\n\n  QRCode.prototype.setMaskPattern = function (value\n  /*int*/\n  ) {\n    this.maskPattern = value;\n  };\n\n  QRCode.prototype.setMatrix = function (value) {\n    this.matrix = value;\n  }; // Check if \"mask_pattern\" is valid.\n\n\n  QRCode.isValidMaskPattern = function (maskPattern\n  /*int*/\n  ) {\n    return maskPattern >= 0 && maskPattern < QRCode.NUM_MASK_PATTERNS;\n  };\n\n  QRCode.NUM_MASK_PATTERNS = 8;\n  return QRCode;\n}();\n\nexport default QRCode; //# sourceMappingURL=QRCode.js.map","map":null,"metadata":{},"sourceType":"module"}