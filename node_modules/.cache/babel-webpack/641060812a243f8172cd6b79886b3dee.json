{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { MultiFormatOneDReader } from '@zxing/library';\nimport { BrowserCodeReader } from './BrowserCodeReader';\n/**\n * Reader to be used for any One Dimension type barcode.\n */\n\nvar BrowserMultiFormatOneDReader = function (_super) {\n  __extends(BrowserMultiFormatOneDReader, _super);\n  /**\n   * Creates an instance of BrowserBarcodeReader.\n   * @param {Map<DecodeHintType, any>} hints?\n   * @param options\n   */\n\n\n  function BrowserMultiFormatOneDReader(hints, options) {\n    return _super.call(this, new MultiFormatOneDReader(hints), hints, options) || this;\n  }\n\n  return BrowserMultiFormatOneDReader;\n}(BrowserCodeReader);\n\nexport { BrowserMultiFormatOneDReader }; //# sourceMappingURL=BrowserMultiFormatOneDReader.js.map","map":null,"metadata":{},"sourceType":"module"}