{"ast":null,"code":"import { interval } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/service-worker\";\nimport * as i2 from \"@angular/router\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(update, appRef, swPush) {\n      this.update = update;\n      this.appRef = appRef;\n      this.swPush = swPush;\n      this.title = 'Restaurant';\n      this.updateClient();\n      this.checkUpdate(); // this.swupdate.available.subscribe(event => {\n      //   if (confirm('Update Available. Refresh the page now to update the cache.')) {\n      //     location.reload(true);\n      //   } else {\n      //     console.log('continue with the older version');\n      //   }\n      // });\n    }\n\n    ngOnInit() {\n      this.pushSubscription();\n    }\n\n    checkUpdate() {\n      this.appRef.isStable.subscribe(isStable => {\n        if (isStable) {\n          const timeInterval = interval(8 * 60 * 60 * 1000);\n          timeInterval.subscribe(() => {\n            this.update.checkForUpdate().then(() => console.log('checked'));\n            console.log('update checked');\n          });\n        }\n      });\n    }\n\n    updateClient() {\n      if (!this.update.isEnabled) {\n        console.log('Not Enabled');\n        return;\n      }\n\n      this.update.available.subscribe(event => {\n        console.log(`current`, event.current, `available `, event.available);\n\n        if (confirm('update available for the app please conform')) {\n          this.update.activateUpdate().then(() => location.reload());\n        }\n      });\n      this.update.activated.subscribe(event => {\n        console.log(`current`, event.previous, `available `, event.current);\n      });\n    }\n\n    pushSubscription() {\n      if (!this.swPush.isEnabled) {\n        console.log('Notification is not enabled');\n        return;\n      } // this.swPush\n      //   .requestSubscription({\n      //     serverPublicKey: this.publicKey,\n      //   })\n      //   .then((sub) => {\n      //     // Make a post call to serve\n      //     console.log(JSON.stringify(sub));\n      //   })\n      //   .catch((err) => console.log(err));\n\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.SwUpdate), i0.ɵɵdirectiveInject(i0.ApplicationRef), i0.ɵɵdirectiveInject(i1.SwPush));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 1,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"router-outlet\");\n      }\n    },\n    directives: [i2.RouterOutlet],\n    styles: [\"\"]\n  });\n  AppComponent.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppComponent,\n    factory: AppComponent.ɵfac,\n    providedIn: 'root'\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}