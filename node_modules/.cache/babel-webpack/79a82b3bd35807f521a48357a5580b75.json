{"ast":null,"code":"import { HttpResponse } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let AuthInterceptorService = /*#__PURE__*/(() => {\n  class AuthInterceptorService {\n    constructor() {}\n\n    intercept(request, next) {\n      const token = localStorage.getItem('token');\n      console.log('Intercepted request' + request.url);\n      request = request.clone({\n        headers: request.headers.set('Authorization', 'Bearer ' + token)\n      });\n\n      if (!request.headers.has('Content-Type')) {\n        request = request.clone({\n          headers: request.headers.set('Content-Type', 'application/json')\n        });\n      }\n\n      request = request.clone({\n        headers: request.headers.set('Accept', 'application/json')\n      });\n      return next.handle(request).pipe(map(event => {\n        if (event instanceof HttpResponse) {\n          console.log('event--->>>', event);\n        }\n\n        return event;\n      }));\n    }\n\n  }\n\n  AuthInterceptorService.ɵfac = function AuthInterceptorService_Factory(t) {\n    return new (t || AuthInterceptorService)();\n  };\n\n  AuthInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptorService,\n    factory: AuthInterceptorService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthInterceptorService;\n})();","map":null,"metadata":{},"sourceType":"module"}