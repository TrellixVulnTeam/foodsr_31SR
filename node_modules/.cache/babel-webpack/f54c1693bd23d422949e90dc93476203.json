{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./dataservice.service\";\nimport * as i2 from \"@angular/router\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(data) {\n      this.data = data;\n      this.title = 'Restaurant'; // this.updateClient();\n      // this.checkUpdate();\n    }\n\n    ngOnInit() {\n      this.data.checkForUpdates();\n      this.applicationRef.isStable.subscribe(s => {\n        if (s) {\n          // #2\n          setInterval(t => {\n            console.log('Ping');\n          }, 500);\n        } // #3\n\n      }); // #4\n      // If you uncomment 1-4 - service-worker will not run\n\n      this.applicationRef.isStable.subscribe(t => {\n        console.log('App stable: ' + t); // this.pushSubscription();\n      }); // checkUpdate() {\n      //   this.appRef.isStable.subscribe((isStable) => {\n      //     if (isStable) {\n      //       const timeInterval = interval(8 * 60 * 60 * 1000);\n      //       timeInterval.subscribe(() => {\n      //         this.update.checkForUpdate().then(() => console.log('checked'));\n      //         console.log('update checked');\n      //       });\n      //     }\n      //   });\n      // }\n      // updateClient() {\n      //   if (!this.update.isEnabled) {\n      //     console.log('Not Enabled');\n      //     return;\n      //   }\n      //   this.update.available.subscribe((event) => {\n      //     console.log(`current`, event.current, `available `, event.available);\n      //     if (confirm('update available for the app please conform')) {\n      //       this.update.activateUpdate().then(() => location.reload());\n      //     }\n      //   });\n      //   this.update.activated.subscribe((event) => {\n      //     console.log(`current`, event.previous, `available `, event.current);\n      //   });\n      // }\n      // pushSubscription() {\n      //   if (!this.swPush.isEnabled) {\n      //     console.log('Notification is not enabled');\n      //     return;\n      //   }\n      // }\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.DataserviceService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 1,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"router-outlet\");\n      }\n    },\n    directives: [i2.RouterOutlet],\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}